<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:vsm="clr-namespace:System.Windows;assembly=System.Windows" 
    xmlns:sketch="clr-namespace:Microsoft.Expression.Prototyping.SketchControls;assembly=Microsoft.Expression.Prototyping.SketchControls"
    xmlns:phone="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls"
    xmlns:primitives="clr-namespace:Microsoft.Phone.Controls.Primitives;assembly=Microsoft.Phone.Controls"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
	mc:Ignorable="d" 
	xmlns:System="clr-namespace:System;assembly=mscorlib" 
    
    d:IsSketchFlowStyle="True"
	d:IsSketchFlowDefaultStyle="True">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="/Microsoft.Expression.Prototyping.SketchControls;component/ScrollViewerStyles.xaml"/>
	</ResourceDictionary.MergedDictionaries>
	
    <Color x:Key="AccentColor">#FF1BA1E2</Color>
    <Color x:Key="BackgroundColor">#FFFFFFFF</Color>
    <Color x:Key="ForegroundColor">#FF606060</Color>
	<SolidColorBrush x:Key="BaseBackground-Sketch" Color="{StaticResource BackgroundColor}"/>
	<SolidColorBrush x:Key="BaseForeground-Sketch" Color="{StaticResource ForegroundColor}"/>
	<SolidColorBrush x:Key="BaseBorder-Sketch" Color="{StaticResource ForegroundColor}"/>
	<SolidColorBrush x:Key="MouseOverBackground-Sketch" Color="#FFD2D2D2"/>
	<SolidColorBrush x:Key="PressedBackground-Sketch" Color="#FF959595"/>
	<SolidColorBrush x:Key="DisabledBackground-Sketch" Color="#FFD8D8D8"/>
	<SolidColorBrush x:Key="DisabledForeground-Sketch" Color="#FF9F9F9F"/>
	<SolidColorBrush x:Key="FocusedBorder-Sketch" Color="#FF000000"/>
	<SolidColorBrush x:Key="DisabledBorder-Sketch" Color="#FF9F9F9F"/>
	<SolidColorBrush x:Key="SelectedBackground-Sketch" Color="#FFAFAFAF"/>
	<SolidColorBrush x:Key="Hyperlink-Sketch" Color="{StaticResource ForegroundColor}"/>
    <SolidColorBrush x:Key="Accent-Sketch" Color="{StaticResource AccentColor}"/>
    <SolidColorBrush x:Key="PhoneAccentBrush" Color="{StaticResource AccentColor}"/>
    <SolidColorBrush x:Key="PhoneChromeBrush" Color="#FF1F1F1F"/>
    <SolidColorBrush x:Key="PhoneForegroundBrush" Color="{StaticResource ForegroundColor}"/>
    <SolidColorBrush x:Key="PhoneBackgroundBrush" Color="{StaticResource BackgroundColor}"/>
    <SolidColorBrush x:Key="PhoneBorderBrush" Color="{StaticResource ForegroundColor}"/>
    <SolidColorBrush x:Key="PhoneSubtleBrush" Color="#FFD8D8D8"/>
    <SolidColorBrush x:Key="PhoneContrastForegroundBrush" Color="#FF000000"/>
    <FontFamily x:Key="FontFamily-Sketch">./Fonts/BuxtonSketch.ttf#Buxton Sketch</FontFamily>
	<System:Double x:Key="SizeDouble-Sketch">19</System:Double>
	<FontWeight x:Key="FontWeight-Sketch">Normal</FontWeight>

    <!-- Default margins for non-touch items -->
    <Thickness x:Key="PhoneHorizontalMargin">12,0</Thickness>
    <Thickness x:Key="PhoneVerticalMargin">0,12</Thickness>
    <Thickness x:Key="PhoneMargin">12</Thickness>
    <Thickness x:Key="PhoneTouchTargetOverhang">12</Thickness>

    <!-- Font sizes -->
    <!--14pt-->
    <System:Double x:Key="PhoneFontSizeSmall">18.667</System:Double>
    <!--15pt-->
    <System:Double x:Key="PhoneFontSizeNormal">20</System:Double>
    <!--17pt-->
    <System:Double x:Key="PhoneFontSizeMedium">22.667</System:Double>
    <!--19pt-->
    <System:Double x:Key="PhoneFontSizeMediumLarge">25.333</System:Double>
    <!--24pt-->
    <System:Double x:Key="PhoneFontSizeLarge">32</System:Double>
    <!--32pt-->
    <System:Double x:Key="PhoneFontSizeExtraLarge">42.667</System:Double>
    <!--54pt-->
    <System:Double x:Key="PhoneFontSizeExtraExtraLarge">72</System:Double>
    <!--140pt-->
    <System:Double x:Key="PhoneFontSizeHuge">186.667</System:Double>
    
    <!-- TextBlock styles -->
    <Style x:Key="PhoneTextBlockBase" TargetType="TextBlock">
      <Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}"/>
      <Setter Property="FontSize" Value="{StaticResource PhoneFontSizeNormal}"/>
      <Setter Property="Foreground" Value="{StaticResource PhoneForegroundBrush}"/>
      <Setter Property="Margin" Value="{StaticResource PhoneHorizontalMargin}"/>
    </Style>

    <Style x:Key="PhoneTextNormalStyle-Sketch" TargetType="TextBlock" BasedOn="{StaticResource PhoneTextBlockBase}" />
      
    <Style x:Key="PhoneTextSubtleStyle-Sketch" TargetType="TextBlock" BasedOn="{StaticResource PhoneTextBlockBase}">
      <Setter Property="Foreground" Value="{StaticResource PhoneSubtleBrush}"/>
    </Style>

    <Style x:Key="PhoneTextTitle1Style-Sketch" TargetType="TextBlock" BasedOn="{StaticResource PhoneTextBlockBase}">
      <Setter Property="FontSize" Value="{StaticResource PhoneFontSizeExtraExtraLarge}"/>
      <Setter Property="FontWeight" Value="Light"/>
    </Style>

    <Style x:Key="PhoneTextTitle2Style-Sketch" TargetType="TextBlock" BasedOn="{StaticResource PhoneTextBlockBase}">
      <Setter Property="FontSize" Value="{StaticResource PhoneFontSizeLarge}"/>
      <Setter Property="FontWeight" Value="Light"/>
    </Style>

    <Style x:Key="PhoneTextTitle3Style-Sketch" TargetType="TextBlock" BasedOn="{StaticResource PhoneTextBlockBase}">
      <Setter Property="FontSize" Value="{StaticResource PhoneFontSizeMedium}"/>
      <Setter Property="FontWeight" Value="Light"/>
    </Style>

    <Style x:Key="PhoneTextExtraLargeStyle-Sketch" TargetType="TextBlock" BasedOn="{StaticResource PhoneTextBlockBase}">
      <Setter Property="FontSize" Value="{StaticResource PhoneFontSizeExtraLarge}"/>
      <Setter Property="FontWeight" Value="Light"/>
    </Style>

    <Style x:Key="PhoneTextGroupHeaderStyle-Sketch" TargetType="TextBlock" BasedOn="{StaticResource PhoneTextBlockBase}">
      <Setter Property="FontSize" Value="{StaticResource PhoneFontSizeLarge}"/>
      <Setter Property="FontWeight" Value="Light"/>
      <Setter Property="Foreground" Value="{StaticResource PhoneSubtleBrush}"/>
    </Style>

    <Style x:Key="PhoneTextLargeStyle-Sketch" TargetType="TextBlock" BasedOn="{StaticResource PhoneTextBlockBase}">
      <Setter Property="FontSize" Value="{StaticResource PhoneFontSizeLarge}"/>
      <Setter Property="FontWeight" Value="Light"/>
    </Style>

    <Style x:Key="PhoneTextSmallStyle-Sketch" TargetType="TextBlock" BasedOn="{StaticResource PhoneTextBlockBase}">
      <Setter Property="FontSize" Value="{StaticResource PhoneFontSizeSmall}"/>
      <Setter Property="Foreground" Value="{StaticResource PhoneSubtleBrush}"/>
    </Style>

    <Style x:Key="PhoneTextContrastStyle-Sketch" TargetType="TextBlock" BasedOn="{StaticResource PhoneTextBlockBase}">
      <Setter Property="Foreground" Value="{StaticResource PhoneContrastForegroundBrush}"/>
      <Setter Property="FontWeight" Value="SemiBold"/>
    </Style>

    <Style x:Key="PhoneTextAccentStyle-Sketch" TargetType="TextBlock" BasedOn="{StaticResource PhoneTextBlockBase}">
      <Setter Property="Foreground" Value="{StaticResource Accent-Sketch}"/>
      <Setter Property="FontWeight" Value="SemiBold"/>
    </Style>

    <Style x:Key="PhoneTextHugeStyle-Sketch" TargetType="TextBlock" BasedOn="{StaticResource PhoneTextBlockBase}">
      <Setter Property="FontSize" Value="{StaticResource PhoneFontSizeHuge}"/>
      <Setter Property="FontWeight" Value="Light"/>
    </Style>

    <Style x:Key="TileText-Sketch" BasedOn="{StaticResource PhoneTextSmallStyle-Sketch}" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource BaseBackground-Sketch}"/>
    </Style>

    <!-- Basic Sketch TextBlock -->
	<Style x:Key="BasicTextBlock-Sketch" TargetType="TextBlock" d:StyleDefaultContent="Basic Text">
		<Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}"/>
		<Setter Property="FontSize" Value="16"/>
		<Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}"/>
	</Style>
	
	<!-- Sketch TextBlock -->
	<Style x:Key="TextBlock-Sketch" TargetType="TextBlock" BasedOn="{StaticResource BasicTextBlock-Sketch}" d:StyleDefaultContent="TextBlock"/>	

	<!-- Sketch Rectangle -->
	<Style x:Key="Rectangle-Sketch" TargetType="sketch:SketchRectangleSL">
		<Setter Property="BorderBrush" Value="{StaticResource BaseBorder-Sketch}"/>
		<Setter Property="Background" Value="{StaticResource BaseBackground-Sketch}"/>
		<Setter Property="SegmentLength" Value="8"/>
		<Setter Property="SegmentOffset" Value="0.12"/>
		<Setter Property="SegmentVariance" Value="0.1"/>
	</Style>
	
	<!-- Sketch Circle -->
	<Style x:Key="Circle-Sketch" TargetType="sketch:SketchCircleSL">
		<Setter Property="BorderBrush" Value="{StaticResource BaseBorder-Sketch}"/>
		<Setter Property="Background" Value="{StaticResource BaseBackground-Sketch}"/>
		<Setter Property="SegmentLength" Value="8"/>
		<Setter Property="SegmentOffset" Value="0.12"/>
		<Setter Property="SegmentVariance" Value="0.1"/>
	</Style>
	
	<!-- Sketch Button -->
	<Style x:Key="Button-Sketch" TargetType="Button">
		<Setter Property="Background" Value="{StaticResource BaseBackground-Sketch}"/>
		<Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}"/>
		<Setter Property="Padding" Value="3"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush" Value="{StaticResource BaseBorder-Sketch}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid Cursor="Hand" Background="#00000000">
						<VisualStateManager.VisualStateGroups>
							<vsm:VisualStateGroup x:Name="CommonStates">
								<vsm:VisualStateGroup.Transitions>
									<vsm:VisualTransition From="Pressed" GeneratedDuration="00:00:00" To="MouseOver"/>
									<vsm:VisualTransition GeneratedDuration="00:00:00" To="Pressed"/>
								</vsm:VisualStateGroup.Transitions>
								<vsm:VisualState x:Name="Normal"/>
                                <vsm:VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentContainer"
                                                                       Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{StaticResource PhoneBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonBackground"
                                                                       Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{StaticResource PhoneForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonBackground"
                                                                       Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{StaticResource PhoneForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentContainer"
                                                                       Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{StaticResource DisabledForeground-Sketch}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonBackground"
                                                                       Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{StaticResource DisabledBackground-Sketch}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonBackground"
                                                                       Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="Transparent" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </vsm:VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
                        <sketch:SketchBorderSL x:Name="ButtonBackground"
                                               BorderBrush="{TemplateBinding BorderBrush}"
                                               BorderThickness="{TemplateBinding BorderThickness}"
                                               Background="{TemplateBinding Background}"
                                               Margin="{StaticResource PhoneTouchTargetOverhang}">
                            <ContentControl x:Name="ContentContainer"
                                            Foreground="{TemplateBinding Foreground}"
                                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                            Padding="{TemplateBinding Padding}"
                                            Content="{TemplateBinding Content}"
                                            ContentTemplate="{TemplateBinding ContentTemplate}" />
                        </sketch:SketchBorderSL>
                    </Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}"/>
		<Setter Property="FontSize" Value="{StaticResource SizeDouble-Sketch}"/>
		<Setter Property="FontWeight" Value="{StaticResource FontWeight-Sketch}"/>
	</Style>

	<!-- Sketch CheckBox -->
	<Style x:Key="CheckBox-Sketch" TargetType="CheckBox">
		<Setter Property="Background" Value="{StaticResource BaseBackground-Sketch}"/>
		<Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="VerticalContentAlignment" Value="Top"/>
		<Setter Property="Padding" Value="4,1,0,0"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush" Value="{StaticResource BaseBorder-Sketch}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="CheckBox">
					<Grid Background="#00000000" Cursor="Hand">
						<vsm:VisualStateManager.VisualStateGroups>
							<vsm:VisualStateGroup x:Name="CommonStates">
								<vsm:VisualStateGroup.Transitions>
									<vsm:VisualTransition GeneratedDuration="00:00:00" To="Pressed"/>
									<vsm:VisualTransition From="Pressed" GeneratedDuration="00:00:00" To="MouseOver"/>
								</vsm:VisualStateGroup.Transitions>
								<vsm:VisualState x:Name="Normal"/>
								<vsm:VisualState x:Name="MouseOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Normal1" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Over" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Normal1" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Pressed1" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Normal1" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="CheckIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.6"/>
										</DoubleAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Disabled1" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.6"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup x:Name="CheckStates">
								<vsm:VisualState x:Name="Checked">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="CheckIcon" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Unchecked"/>
								<vsm:VisualState x:Name="Indeterminate">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="IndeterminateIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup x:Name="FocusStates">
								<vsm:VisualState x:Name="Focused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Focus" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Unfocused"/>
							</vsm:VisualStateGroup>
						</vsm:VisualStateManager.VisualStateGroups>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="16"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<Grid HorizontalAlignment="Left" VerticalAlignment="Top">
							<sketch:SketchRectangleSL x:Name="Normal1" SegmentLength="4" SegmentOffset="0.2" SegmentVariance="0.2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Width="14" Height="14" Foreground="{TemplateBinding Foreground}"/>
							<sketch:SketchRectangleSL x:Name="Over" SegmentLength="4" SegmentOffset="0.2" SegmentVariance="0.2" Background="{StaticResource MouseOverBackground-Sketch}" BorderBrush="{StaticResource BaseBorder-Sketch}" Visibility="Collapsed" Width="14" Height="14"/>
							<sketch:SketchRectangleSL x:Name="Pressed1" SegmentLength="4" SegmentOffset="0.2" SegmentVariance="0.2" Background="{StaticResource PressedBackground-Sketch}" BorderBrush="{StaticResource BaseBorder-Sketch}" Visibility="Collapsed" Width="14" Height="14"/>
							<sketch:SketchRectangleSL x:Name="Focus" SegmentLength="4" SegmentOffset="0.2" SegmentVariance="0.2" Visibility="Collapsed" BorderBrush="{StaticResource FocusedBorder-Sketch}" Width="14" Height="14" Background="{x:Null}"/>
							<sketch:SketchRectangleSL x:Name="Disabled1" SegmentLength="4" SegmentOffset="0.2" SegmentVariance="0.2" Background="{StaticResource BaseBackground-Sketch}" Visibility="Collapsed" BorderBrush="{StaticResource DisabledBorder-Sketch}" Width="14" Height="14"/>
							<Path x:Name="CheckIcon" Fill="{TemplateBinding BorderBrush}" Stretch="Fill" Height="10" Margin="-1,0,0,2" Width="10.5" Data="M102.03442,598.79645 L105.22962,597.78918 L106.78825,600.42358 C106.78825,600.42358 108.51028,595.74304 110.21724,593.60419 C112.00967,591.35822 114.89314,591.42316 114.89314,591.42316 C114.89314,591.42316 112.67844,593.42645 111.93174,594.44464 C110.7449,596.06293 107.15683,604.13837 107.15683,604.13837 z" Visibility="Collapsed"/>
							<Rectangle x:Name="IndeterminateIcon" Fill="{TemplateBinding BorderBrush}" Height="2" Width="6" Opacity="0" Margin="0" VerticalAlignment="Center" HorizontalAlignment="Center"/>
						</Grid>
						<ContentPresenter x:Name="contentPresenter" Grid.Column="1" VerticalAlignment="Top" d:LayoutOverrides="Width" Margin="0,-4,0,0"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}"/>
		<Setter Property="FontSize" Value="{StaticResource SizeDouble-Sketch}"/>
		<Setter Property="FontWeight" Value="{StaticResource FontWeight-Sketch}"/>
	</Style>
	
	<!-- Sketch HyperLinkButton -->
	<Style x:Key="HyperlinkButton-Sketch" TargetType="HyperlinkButton">
		<Setter Property="Foreground" Value="{StaticResource Hyperlink-Sketch}"/>
		<Setter Property="Padding" Value="2,0,2,0"/>
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="VerticalContentAlignment" Value="Top"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="HyperlinkButton">
					<Grid Cursor="{TemplateBinding Cursor}" Background="{TemplateBinding Background}">
						<vsm:VisualStateManager.VisualStateGroups>
							<vsm:VisualStateGroup x:Name="CommonStates">
								<vsm:VisualState x:Name="Normal"/>
								<vsm:VisualState x:Name="MouseOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="UnderlineTextBlock" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="NormalText" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="UnderlineTextBlock" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="NormalText" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="PressedTextBlock" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="DisabledOverlay" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="NormalText" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup x:Name="FocusStates">
								<vsm:VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="SketchRectangleSL" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Unfocused"/>
							</vsm:VisualStateGroup>
						</vsm:VisualStateManager.VisualStateGroups>
						<TextBlock x:Name="NormalText" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Visible" Text="{TemplateBinding Content}" Margin="{TemplateBinding Padding}" Foreground="{TemplateBinding Foreground}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}"/>
						<TextBlock x:Name="UnderlineTextBlock" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Collapsed" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" Text="{TemplateBinding Content}" TextDecorations="Underline" Foreground="{StaticResource Hyperlink-Sketch}" FontFamily="{TemplateBinding FontFamily}"/>
						<TextBlock x:Name="PressedTextBlock" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Collapsed" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" Text="{TemplateBinding Content}" TextDecorations="Underline" Foreground="{StaticResource FocusedBorder-Sketch}" FontFamily="{TemplateBinding FontFamily}"/>
						<TextBlock x:Name="DisabledOverlay" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Canvas.ZIndex="1" Visibility="Collapsed" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" Foreground="{StaticResource DisabledBackground-Sketch}" Text="{TemplateBinding Content}" FontFamily="{TemplateBinding FontFamily}"/>
						<sketch:SketchRectangleSL x:Name="SketchRectangleSL" Background="{x:Null}" BorderBrush="{StaticResource FocusedBorder-Sketch}" Opacity="0" Margin="-2,0,2,2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" SegmentLength="8" SegmentOffset="0.12" SegmentVariance="0.1"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}"/>
		<Setter Property="FontSize" Value="{StaticResource SizeDouble-Sketch}"/>
		<Setter Property="FontWeight" Value="{StaticResource FontWeight-Sketch}"/>
	</Style>

	<!-- Sketch ListBoxItem -->
	<Style x:Key="ListBoxItem-Sketch" TargetType="ListBoxItem">
		<Setter Property="Padding" Value="3"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="VerticalContentAlignment" Value="Top"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="TabNavigation" Value="Local"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListBoxItem">
					<Grid Background="{TemplateBinding Background}">
						<vsm:VisualStateManager.VisualStateGroups>
							<vsm:VisualStateGroup x:Name="CommonStates">
								<vsm:VisualStateGroup.Transitions>
									<vsm:VisualTransition GeneratedDuration="00:00:00.2000000"/>
								</vsm:VisualStateGroup.Transitions>
								<vsm:VisualState x:Name="Normal"/>
								<vsm:VisualState x:Name="MouseOver"/>
								<vsm:VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.5"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup x:Name="SelectionStates">
								<vsm:VisualState x:Name="Unselected"/>
								<vsm:VisualState x:Name="Selected">
									<Storyboard>
										<ColorAnimation Duration="0" To="{StaticResource AccentColor}" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True"/>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup x:Name="FocusStates">
								<vsm:VisualStateGroup.Transitions>
									<vsm:VisualTransition GeneratedDuration="00:00:00.1000000"/>
								</vsm:VisualStateGroup.Transitions>
								<vsm:VisualState x:Name="Focused"/>
								<vsm:VisualState x:Name="Unfocused"/>
							</vsm:VisualStateGroup>
						</vsm:VisualStateManager.VisualStateGroups>
						<sketch:SketchRectangleSL x:Name="Selected1" Opacity="0" BorderBrush="{StaticResource SelectedBackground-Sketch}" Background="{StaticResource SelectedBackground-Sketch}" SegmentLength="8" SegmentOffset="0.12" SegmentVariance="0.1"/>
						<ContentControl x:Name="contentPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Foreground="{TemplateBinding Foreground}" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}"/>
		<Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}"/>
		<Setter Property="FontSize" Value="{StaticResource SizeDouble-Sketch}"/>
		<Setter Property="FontWeight" Value="{StaticResource FontWeight-Sketch}"/>
		<Setter Property="Margin" Value="5,4,0,0"/>
	</Style>

	<!-- Sketch PasswordBox -->
	<Style x:Key="PasswordBox-Sketch" TargetType="PasswordBox">
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Background" Value="{StaticResource BaseBackground-Sketch}"/>
		<Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}"/>
		<Setter Property="Padding" Value="2"/>
		<Setter Property="BorderBrush" Value="{StaticResource BaseBorder-Sketch}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="PasswordBox">
					<Grid x:Name="RootElement">
						<vsm:VisualStateManager.VisualStateGroups>
							<vsm:VisualStateGroup x:Name="CommonStates">
								<vsm:VisualState x:Name="Normal"/>
								<vsm:VisualState x:Name="MouseOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Over" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Normal1" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Normal1" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Disabled1" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup x:Name="FocusStates">
								<vsm:VisualState x:Name="Focused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Focus" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Unfocused">
									<Storyboard/>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
						</vsm:VisualStateManager.VisualStateGroups>
						<Grid x:Name="Border" Opacity="1" Background="#00000000">
							<sketch:SketchRectangleSL x:Name="Normal1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" SegmentLength="8" SegmentOffset="0.12" SegmentVariance="0.1" Margin="0,0,-1,-1" Foreground="{TemplateBinding Foreground}"/>
							<sketch:SketchRectangleSL x:Name="Over" BorderBrush="{StaticResource BaseBorder-Sketch}" Background="{StaticResource MouseOverBackground-Sketch}" SegmentLength="8" SegmentOffset="0.12" SegmentVariance="0.1" Margin="0,0,-1,-1" Visibility="Collapsed"/>
							<sketch:SketchRectangleSL x:Name="Focus" BorderBrush="{StaticResource FocusedBorder-Sketch}" Background="{StaticResource MouseOverBackground-Sketch}" SegmentLength="8" SegmentOffset="0.12" SegmentVariance="0.1" Margin="0,0,-1,-1" Visibility="Collapsed"/>
							<sketch:SketchRectangleSL x:Name="Disabled1" BorderBrush="{StaticResource DisabledBorder-Sketch}" Background="{StaticResource BaseBackground-Sketch}" SegmentLength="8" SegmentOffset="0.12" SegmentVariance="0.1" Margin="0,0,-1,-1" Visibility="Collapsed"/>
							<Border x:Name="MouseOverBorder" BorderBrush="Transparent" BorderThickness="1">
								<Border x:Name="ContentElement" Margin="2,2,2,2" VerticalAlignment="Center"/>
							</Border>
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}"/>
		<Setter Property="FontSize" Value="{StaticResource SizeDouble-Sketch}"/>
		<Setter Property="FontWeight" Value="{StaticResource FontWeight-Sketch}"/>
	</Style>
	
	<!-- Sketch ValidationToolTip ControlTemplate -->
	<ControlTemplate x:Key="ValidationToolTipTemplate-Sketch">
		<Grid x:Name="Root" Margin="5,0" Opacity="0" RenderTransformOrigin="0,0">
			<Grid.RenderTransform>
				<TranslateTransform x:Name="xform" X="-25"/>
			</Grid.RenderTransform>
			<vsm:VisualStateManager.VisualStateGroups>
				<vsm:VisualStateGroup x:Name="OpenStates">
					<vsm:VisualStateGroup.Transitions>
						<vsm:VisualTransition GeneratedDuration="0"/>
						<vsm:VisualTransition GeneratedDuration="0:0:0.2" To="Open">
							<Storyboard>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetName="xform" Storyboard.TargetProperty="X">
									<SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity">
									<SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
						</vsm:VisualTransition>
					</vsm:VisualStateGroup.Transitions>
					<vsm:VisualState x:Name="Closed">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity">
								<SplineDoubleKeyFrame KeyTime="0" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</vsm:VisualState>
					<vsm:VisualState x:Name="Open">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetName="xform" Storyboard.TargetProperty="X">
								<SplineDoubleKeyFrame KeyTime="0" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity">
								<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</vsm:VisualState>
				</vsm:VisualStateGroup>
			</vsm:VisualStateManager.VisualStateGroups>
			<Border Margin="4,4,-4,-4" Background="#152A2E31" CornerRadius="4"/>
			<Border Margin="3,3,-3,-3" Background="#252A2E31" CornerRadius="4"/>
			<Border Margin="2,2,-2,-2" Background="#352A2E31" CornerRadius="4"/>
			<Border Margin="1,1,-1,-1" Background="#452A2E31" CornerRadius="4"/>
			<Border Background="#FFDC000C" CornerRadius="4"/>
			<Border CornerRadius="4">
				<Border.Background>
					<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
						<GradientStop Color="#66FFFFFF"/>
						<GradientStop Color="#66000000" Offset="1"/>
						<GradientStop Color="#00E5E5E5" Offset="0.1"/>
						<GradientStop Color="#00161616" Offset="0.9"/>
					</LinearGradientBrush>
				</Border.Background>
				<TextBlock Margin="8,3,8,4" MaxWidth="250" UseLayoutRounding="false" Foreground="White" Text="{Binding Path=(Validation.Errors)[0].Exception.Message}" TextWrapping="Wrap"/>
			</Border>
		</Grid>
	</ControlTemplate>
	
	<!-- Sketch Note -->
	<Style x:Key="Note-Sketch" TargetType="TextBox" d:StyleDefaultContent="Note" d:ExplicitWidth="200" d:ExplicitHeight="180">
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Background" Value="#FFFFFFFF"/>
		<Setter Property="Foreground" Value="#FF5B5B5B"/>
		<Setter Property="Padding" Value="2"/>
		<Setter Property="BorderBrush">
			<Setter.Value>
				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
					<GradientStop Color="#FFA3AEB9" Offset="0"/>
					<GradientStop Color="#FF8399A9" Offset="0.375"/>
					<GradientStop Color="#FF718597" Offset="0.375"/>
					<GradientStop Color="#FF617584" Offset="1"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TextBox">
					<Grid x:Name="RootElement">
						<vsm:VisualStateManager.VisualStateGroups>
							<vsm:VisualStateGroup x:Name="CommonStates">
								<vsm:VisualState x:Name="Normal"/>
								<vsm:VisualState x:Name="MouseOver">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="MouseOverBorder" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
											<SplineColorKeyFrame KeyTime="0" Value="#FF99C1E2"/>
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="ReadOnly">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ReadOnlyVisualElement" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ReadOnlyVisualElement" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
											<EasingColorKeyFrame KeyTime="00:00:00" Value="#00F7F7F7"/>
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup x:Name="FocusStates">
								<vsm:VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Unfocused">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup x:Name="ValidationStates">
								<vsm:VisualState x:Name="Valid"/>
								<vsm:VisualState x:Name="InvalidUnfocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="InvalidFocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsOpen">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<System:Boolean>True</System:Boolean>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
						</vsm:VisualStateManager.VisualStateGroups>
						<Rectangle Stroke="{x:Null}" RadiusX="1" RadiusY="1">
							<Rectangle.Effect>
								<DropShadowEffect BlurRadius="10" Opacity="0.3"/>
							</Rectangle.Effect>
							<Rectangle.Fill>
								<LinearGradientBrush EndPoint="0.66,0.777" StartPoint="0.34,0.223">
									<GradientStop Color="#FFEBE380"/>
									<GradientStop Color="#FFFDF47B" Offset="1"/>
								</LinearGradientBrush>
							</Rectangle.Fill>
						</Rectangle>
						<Border x:Name="Border" Opacity="1" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1">
							<Grid Margin="10,10,10,10" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
								<Border x:Name="ReadOnlyVisualElement" Opacity="0" Background="#72F7F7F7"/>
								<Border x:Name="MouseOverBorder" BorderBrush="Transparent" BorderThickness="1">
									<ScrollViewer x:Name="ContentElement" BorderThickness="0" IsTabStop="False" Padding="{TemplateBinding Padding}"/>
								</Border>
							</Grid>
						</Border>
						<Border x:Name="DisabledVisualElement" IsHitTestVisible="False" Opacity="0" Background="#A5F7F7F7" BorderBrush="#A5F7F7F7" BorderThickness="{TemplateBinding BorderThickness}"/>
						<Border x:Name="FocusVisualElement" Margin="1" IsHitTestVisible="False" Opacity="0" BorderBrush="#FF6DBDD1" BorderThickness="{TemplateBinding BorderThickness}"/>
						<Border x:Name="ValidationErrorElement" Visibility="Collapsed" BorderBrush="#FFDB000C" BorderThickness="1" CornerRadius="1">
							<ToolTipService.ToolTip>
								<ToolTip x:Name="validationTooltip" Template="{StaticResource ValidationToolTipTemplate-Sketch}" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
									<ToolTip.Triggers>
										<EventTrigger RoutedEvent="Canvas.Loaded">
											<BeginStoryboard>
												<Storyboard>
													<ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsHitTestVisible">
														<DiscreteObjectKeyFrame KeyTime="0">
															<DiscreteObjectKeyFrame.Value>
																<System:Boolean>true</System:Boolean>
															</DiscreteObjectKeyFrame.Value>
														</DiscreteObjectKeyFrame>
													</ObjectAnimationUsingKeyFrames>
												</Storyboard>
											</BeginStoryboard>
										</EventTrigger>
									</ToolTip.Triggers>
								</ToolTip>
							</ToolTipService.ToolTip>
							<Grid Height="12" HorizontalAlignment="Right" Margin="1,-4,-4,0" VerticalAlignment="Top" Width="12" Background="Transparent">
								<Path Fill="#FFDC000C" Margin="1,3,0,0" Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z"/>
								<Path Fill="#ffffff" Margin="1,3,0,0" Data="M 0,0 L2,0 L 8,6 L8,8"/>
							</Grid>
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}"/>
		<Setter Property="FontSize" Value="21"/>
		<Setter Property="IsReadOnly" Value="True"/>
	</Style>

    <ControlTemplate x:Key="SketchProgressBarSliderThumb" TargetType="Thumb">
      <Rectangle IsHitTestVisible="False" Width="4" Height="4" Fill="{TemplateBinding Foreground}"/>
    </ControlTemplate>
    <Style x:Key="SketchProgressBarSliderStyle" TargetType="Slider">
      <Setter Property="Maximum" Value="3000"/>
      <Setter Property="Minimum" Value="0"/>
      <Setter Property="Value" Value="0"/>
      <Setter Property="Opacity" Value="0"/>
      <Setter Property="IsTabStop" Value="False"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="Slider">
            <Grid IsHitTestVisible="False">
              <Grid x:Name="HorizontalTemplate">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <RepeatButton x:Name="HorizontalTrackLargeChangeDecreaseRepeatButton" Grid.Column="0" Height="0" Template="{x:Null}"/>
                <Thumb x:Name="HorizontalThumb" IsTabStop="False" Grid.Column="1" Height="4" Template="{StaticResource SketchProgressBarSliderThumb}" Foreground="{TemplateBinding Foreground}"/>
                <RepeatButton x:Name="HorizontalTrackLargeChangeIncreaseRepeatButton" Grid.Column="2" Height="0" Template="{x:Null}"/>
              </Grid>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    
	<!-- Sketch ProgressBar -->
	<Style x:Key="ProgressBar-Sketch" TargetType="ProgressBar">
		<Setter Property="Foreground" Value="{StaticResource Accent-Sketch}"/>
		<Setter Property="Background" Value="{StaticResource BaseBackground-Sketch}"/>
		<Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Height" Value="10"/>
		<Setter Property="Maximum" Value="100"/>
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="BorderBrush" Value="{StaticResource BaseBorder-Sketch}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ProgressBar">
					<Grid x:Name="Root" Background="{TemplateBinding Background}">
						<Grid.Resources>
                            <ExponentialEase EasingMode="EaseOut" Exponent="1" x:Key="ProgressBarEaseOut"/>
                            <ExponentialEase EasingMode="EaseIn" Exponent="1" x:Key="ProgressBarEaseIn"/>
						</Grid.Resources>
						<vsm:VisualStateManager.VisualStateGroups>
							<vsm:VisualStateGroup x:Name="CommonStates">
								<vsm:VisualState x:Name="Determinate"/>
								<vsm:VisualState x:Name="Indeterminate">
                                    <Storyboard RepeatBehavior="Forever" Duration="00:00:04.4">
                                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="IndeterminateRoot" Storyboard.TargetProperty="Visibility">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                      </ObjectAnimationUsingKeyFrames>
                                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DeterminateRoot" Storyboard.TargetProperty="Visibility">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                      </ObjectAnimationUsingKeyFrames>
                                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Slider1" Storyboard.TargetProperty="Value">
                                        <EasingDoubleKeyFrame Value="1000" 	KeyTime="00:00:00.5">
                                          <EasingDoubleKeyFrame.EasingFunction>
                                            <ExponentialEase EasingMode="EaseOut" Exponent="1"/>
                                          </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                        <LinearDoubleKeyFrame Value="2000" 	KeyTime="00:00:02.0" />
                                        <EasingDoubleKeyFrame Value="3000" 	KeyTime="00:00:02.5" >
                                          <EasingDoubleKeyFrame.EasingFunction>
                                            <ExponentialEase EasingMode="EaseIn" Exponent="1"/>
                                          </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                      </DoubleAnimationUsingKeyFrames>
                                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Slider2" Storyboard.TargetProperty="Value" BeginTime="00:00:00.2">
                                        <EasingDoubleKeyFrame Value="1000" 	KeyTime="00:00:00.5">
                                          <EasingDoubleKeyFrame.EasingFunction>
                                            <ExponentialEase EasingMode="EaseOut" Exponent="1"/>
                                          </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                        <LinearDoubleKeyFrame Value="2000" 	KeyTime="00:00:02.0" />
                                        <EasingDoubleKeyFrame Value="3000" 	KeyTime="00:00:02.5" >
                                          <EasingDoubleKeyFrame.EasingFunction>
                                            <ExponentialEase EasingMode="EaseIn" Exponent="1"/>
                                          </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                      </DoubleAnimationUsingKeyFrames>
                                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Slider3" Storyboard.TargetProperty="Value" BeginTime="00:00:00.4">
                                        <EasingDoubleKeyFrame Value="1000" 	KeyTime="00:00:00.5">
                                          <EasingDoubleKeyFrame.EasingFunction>
                                            <ExponentialEase EasingMode="EaseOut" Exponent="1"/>
                                          </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                        <LinearDoubleKeyFrame Value="2000" 	KeyTime="00:00:02.0" />
                                        <EasingDoubleKeyFrame Value="3000" 	KeyTime="00:00:02.5" >
                                          <EasingDoubleKeyFrame.EasingFunction>
                                            <ExponentialEase EasingMode="EaseIn" Exponent="1"/>
                                          </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                      </DoubleAnimationUsingKeyFrames>
                                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Slider4" Storyboard.TargetProperty="Value" BeginTime="00:00:00.6">
                                        <EasingDoubleKeyFrame Value="1000" 	KeyTime="00:00:00.5">
                                          <EasingDoubleKeyFrame.EasingFunction>
                                            <ExponentialEase EasingMode="EaseOut" Exponent="1"/>
                                          </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                        <LinearDoubleKeyFrame Value="2000" 	KeyTime="00:00:02.0" />
                                        <EasingDoubleKeyFrame Value="3000" 	KeyTime="00:00:02.5" >
                                          <EasingDoubleKeyFrame.EasingFunction>
                                            <ExponentialEase EasingMode="EaseIn" Exponent="1"/>
                                          </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                      </DoubleAnimationUsingKeyFrames>
                                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Slider5" Storyboard.TargetProperty="Value" BeginTime="00:00:00.8">
                                        <EasingDoubleKeyFrame Value="1000" 	KeyTime="00:00:00.5">
                                          <EasingDoubleKeyFrame.EasingFunction>
                                            <ExponentialEase EasingMode="EaseOut" Exponent="1"/>
                                          </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                        <LinearDoubleKeyFrame Value="2000" 	KeyTime="00:00:02.0" />
                                        <EasingDoubleKeyFrame Value="3000" 	KeyTime="00:00:02.5" >
                                          <EasingDoubleKeyFrame.EasingFunction>
                                            <ExponentialEase EasingMode="EaseIn" Exponent="1"/>
                                          </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                      </DoubleAnimationUsingKeyFrames>

                                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Slider1" Storyboard.TargetProperty="Opacity">
                                        <DiscreteDoubleKeyFrame Value="1"	KeyTime="0" />
                                        <DiscreteDoubleKeyFrame Value="0"	KeyTime="00:00:02.5" />
                                      </DoubleAnimationUsingKeyFrames>
                                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Slider2" Storyboard.TargetProperty="Opacity" BeginTime="00:00:00.2">
                                        <DiscreteDoubleKeyFrame Value="1"	KeyTime="0" />
                                        <DiscreteDoubleKeyFrame Value="0"	KeyTime="00:00:02.5" />
                                      </DoubleAnimationUsingKeyFrames>
                                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Slider3" Storyboard.TargetProperty="Opacity" BeginTime="00:00:00.4">
                                        <DiscreteDoubleKeyFrame Value="1"	KeyTime="0" />
                                        <DiscreteDoubleKeyFrame Value="0"	KeyTime="00:00:02.5" />
                                      </DoubleAnimationUsingKeyFrames>
                                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Slider4" Storyboard.TargetProperty="Opacity" BeginTime="00:00:00.6">
                                        <DiscreteDoubleKeyFrame Value="1"	KeyTime="0" />
                                        <DiscreteDoubleKeyFrame Value="0"	KeyTime="00:00:02.5" />
                                      </DoubleAnimationUsingKeyFrames>
                                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Slider5" Storyboard.TargetProperty="Opacity" BeginTime="00:00:00.8">
                                        <DiscreteDoubleKeyFrame Value="1"	KeyTime="0" />
                                        <DiscreteDoubleKeyFrame Value="0"	KeyTime="00:00:02.5" />
                                      </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
						</vsm:VisualStateManager.VisualStateGroups>
						<Border x:Name="ProgressBarTrack" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3"/>
						<Grid x:Name="ProgressBarRootGrid">
							<Rectangle x:Name="ProgressBarRootGradient" Stroke="#FFFFFFFF" StrokeThickness="1" RadiusX="1.5" RadiusY="1.5" Margin="{TemplateBinding BorderThickness}" Canvas.ZIndex="1" Visibility="Collapsed">
								<Rectangle.Fill>
									<LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
										<GradientStop Color="#B2FFFFFF" Offset="0"/>
										<GradientStop Color="#C6FFFFFF" Offset="0.15"/>
										<GradientStop Color="#D1FFFFFF" Offset="0.275"/>
										<GradientStop Color="#C6FFFFFF" Offset="0.4"/>
										<GradientStop Color="#BFFFFFFF" Offset="0.65"/>
										<GradientStop Color="#A5FFFFFF" Offset="0.75"/>
										<GradientStop Color="#91FFFFFF" Offset="0.85"/>
										<GradientStop Color="#72FFFFFF" Offset="1"/>
									</LinearGradientBrush>
								</Rectangle.Fill>
							</Rectangle>
                            <Border x:Name="IndeterminateRoot" Margin="2" Visibility="Collapsed">
                                <Grid>
                                  <Slider x:Name="Slider1" Style="{StaticResource SketchProgressBarSliderStyle}" Foreground="{TemplateBinding Foreground}"/>
                                  <Slider x:Name="Slider2" Style="{StaticResource SketchProgressBarSliderStyle}" Foreground="{TemplateBinding Foreground}"/>
                                  <Slider x:Name="Slider3" Style="{StaticResource SketchProgressBarSliderStyle}" Foreground="{TemplateBinding Foreground}"/>
                                  <Slider x:Name="Slider4" Style="{StaticResource SketchProgressBarSliderStyle}" Foreground="{TemplateBinding Foreground}"/>
                                  <Slider x:Name="Slider5" Style="{StaticResource SketchProgressBarSliderStyle}" Foreground="{TemplateBinding Foreground}"/>
                                </Grid>
                            </Border>
							<Grid x:Name="DeterminateRoot" Margin="1">
								<Rectangle x:Name="ProgressBarIndicator" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Left"/>
							</Grid>
						</Grid>
						<sketch:SketchRectangleSL BorderBrush="{TemplateBinding BorderBrush}" Foreground="{TemplateBinding Foreground}" Background="{x:Null}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Sketch RadioButton -->
	<Style x:Key="RadioButton-Sketch" TargetType="RadioButton">
		<Setter Property="Background" Value="{StaticResource BaseBackground-Sketch}"/>
		<Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="VerticalContentAlignment" Value="Top"/>
		<Setter Property="Padding" Value="4,1,0,0"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush" Value="{StaticResource BaseBorder-Sketch}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="RadioButton">
					<Grid Background="#00000000" Cursor="Hand">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="17.333"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<vsm:VisualStateManager.VisualStateGroups>
							<vsm:VisualStateGroup x:Name="CommonStates">
								<vsm:VisualStateGroup.Transitions>
									<vsm:VisualTransition From="Pressed" GeneratedDuration="00:00:00" To="Normal"/>
									<vsm:VisualTransition GeneratedDuration="00:00:00" To="Pressed"/>
								</vsm:VisualStateGroup.Transitions>
								<vsm:VisualState x:Name="Normal">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Over" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Pressed1" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Over" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Pressed1" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.6"/>
										</DoubleAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Normal1" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Disabled2" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="CheckIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.6"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup x:Name="CheckStates">
								<vsm:VisualState x:Name="Checked">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="CheckIcon" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Unchecked"/>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup x:Name="FocusStates">
								<vsm:VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Focus1" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Normal1" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Unfocused"/>
							</vsm:VisualStateGroup>
						</vsm:VisualStateManager.VisualStateGroups>
						<Grid HorizontalAlignment="Stretch" VerticalAlignment="Top" Grid.Column="0" Margin="0,3,0,0">
							<Ellipse x:Name="NormalBg" Fill="{TemplateBinding Background}" Height="12" Margin="-6,-2,0,0" Width="12"/>
							<Ellipse x:Name="Over" Fill="{StaticResource MouseOverBackground-Sketch}" Stroke="{x:Null}" Height="12" Width="12" Margin="-5,-3,0,0" Opacity="0"/>
							<Ellipse x:Name="Pressed1" Fill="{StaticResource PressedBackground-Sketch}" Stroke="{x:Null}" Height="12" Width="12" Opacity="0" Margin="-5,-2,0,0"/>
							<sketch:SketchCircleSL x:Name="Normal1" Height="14" HorizontalAlignment="Left" Width="14" Margin="0,0,0,0" Segments="8" SegmentLength="1.2" SegmentOffset="0.2" SegmentVariance="0.1" BorderBrush="{TemplateBinding BorderBrush}" Background="{x:Null}"/>
							<sketch:SketchCircleSL x:Name="Focus1" Height="14" HorizontalAlignment="Left" Width="14" Margin="0,0,0,0" Segments="8" SegmentLength="2" SegmentOffset="0.5" BorderBrush="{StaticResource FocusedBorder-Sketch}" Opacity="0" Background="{x:Null}"/>
							<sketch:SketchCircleSL x:Name="Disabled2" Height="14" HorizontalAlignment="Left" Width="14" Margin="0,0,0,0" Segments="8" SegmentLength="1.2" SegmentOffset="0.2" SegmentVariance="0.1" BorderBrush="{StaticResource DisabledBorder-Sketch}" Visibility="Collapsed"/>
							<Ellipse x:Name="Disabled1" Fill="{StaticResource DisabledBackground-Sketch}" Stroke="{x:Null}" Height="12" Width="12" Margin="-5,-2,0,0" Visibility="Collapsed"/>
							<Ellipse x:Name="CheckIcon" Fill="{TemplateBinding BorderBrush}" Height="6" Width="6" HorizontalAlignment="Left" Margin="3,-2,0,0" Visibility="Collapsed"/>
						</Grid>
						<ContentPresenter x:Name="contentPresenter" Grid.ColumnSpan="2" Grid.Column="1" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="0,-2,0,0"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}"/>
		<Setter Property="FontWeight" Value="{StaticResource FontWeight-Sketch}"/>
		<Setter Property="FontSize" Value="{StaticResource SizeDouble-Sketch}"/>
	</Style>
	
    <ControlTemplate x:Key="SketchScrollbarThumb" TargetType="Thumb">
      <Rectangle IsHitTestVisible="False" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Fill="{TemplateBinding Background}" />
    </ControlTemplate>
    
	<!-- Sketch ScrollBar -->
	<Style x:Key="ScrollBar-Sketch" TargetType="ScrollBar">
		<Setter Property="Background" Value="{StaticResource DisabledForeground-Sketch}"/>
		<Setter Property="BorderBrush" Value="{StaticResource BaseBorder-Sketch}"/>
		<Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="MinWidth" Value="5"/>
        <Setter Property="MinHeight" Value="5"/>
        <Setter Property="IsHitTestVisible" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ScrollBar">
					<Grid>
						<vsm:VisualStateManager.VisualStateGroups>
							<vsm:VisualStateGroup x:Name="CommonStates">
								<vsm:VisualState x:Name="Normal"/>
								<vsm:VisualState x:Name="MouseOver"/>
								<vsm:VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="0.5"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
						</vsm:VisualStateManager.VisualStateGroups>
						<Grid x:Name="HorizontalRoot" Background="Transparent" Height="{TemplateBinding Height}">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>
							<RepeatButton x:Name="HorizontalSmallDecrease" IsTabStop="False" Visibility="Collapsed"/>
							<RepeatButton x:Name="HorizontalLargeDecrease" IsTabStop="False" Template="{x:Null}" Grid.Column="1" Height="0" />
							<Thumb x:Name="HorizontalThumb" Background="{TemplateBinding Background}" Grid.Column="2" Margin="{TemplateBinding Padding}" MinWidth="72" Template="{StaticResource SketchScrollbarThumb}" />
							<RepeatButton x:Name="HorizontalLargeIncrease" IsTabStop="False" Template="{x:Null}" Grid.Column="3" Height="0" />
							<RepeatButton x:Name="HorizontalSmallIncrease" IsTabStop="False" Visibility="Collapsed">
								<RepeatButton.RenderTransform>
									<TransformGroup>
										<ScaleTransform ScaleX="-1"/>
										<SkewTransform/>
										<RotateTransform/>
										<TranslateTransform/>
									</TransformGroup>
								</RepeatButton.RenderTransform>
							</RepeatButton>
						</Grid>
						<Grid x:Name="VerticalRoot" Visibility="Collapsed" Width="{TemplateBinding Width}">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="*"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<RepeatButton x:Name="VerticalSmallDecrease" IsTabStop="False" Visibility="Collapsed"/>
							<RepeatButton x:Name="VerticalLargeDecrease" IsTabStop="False" Template="{x:Null}" Grid.Row="1" Width="0" />
							<Thumb x:Name="VerticalThumb" Background="{TemplateBinding Background}" Grid.Row="2" Margin="{TemplateBinding Padding}" MinHeight="72" Template="{StaticResource SketchScrollbarThumb}" />
							<RepeatButton x:Name="VerticalLargeIncrease" IsTabStop="False" Grid.Row="3" Template="{x:Null}" Width="0" />
							<RepeatButton x:Name="VerticalSmallIncrease" IsTabStop="False" Visibility="Collapsed" />
						</Grid>
						<sketch:SketchRectangleSL SegmentLength="8" SegmentOffset="0.12" SegmentVariance="0.1" Background="{x:Null}" BorderBrush="{TemplateBinding BorderBrush}" Foreground="{TemplateBinding Foreground}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Sketch ScrollViewer (Copied from SketchControls\ScrollViewerStyles.xaml) -->
	<ControlTemplate x:Key="ScrollViewer-SketchTemplate2" TargetType="ScrollViewer">
		<Grid>
			<Grid Background="{TemplateBinding Background}">
				<Grid.RowDefinitions>
					<RowDefinition Height="*"/>
					<RowDefinition Height="Auto"/>
				</Grid.RowDefinitions>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="Auto"/>
				</Grid.ColumnDefinitions>
				<sketch:SketchRectangleSL SegmentLength="8" SegmentOffset="0.12" SegmentVariance="0.1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Foreground="{TemplateBinding Foreground}" Grid.ColumnSpan="2" Grid.RowSpan="2"/>
				<ScrollContentPresenter x:Name="ScrollContentPresenter" Cursor="{TemplateBinding Cursor}" Margin="{TemplateBinding Padding}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
				<Rectangle Fill="{x:Null}" Grid.Column="1" Grid.Row="1"/>
				<ScrollBar x:Name="VerticalScrollBar" IsTabStop="False" Width="5" Grid.Column="1" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Value="{TemplateBinding VerticalOffset}" Orientation="Vertical" ViewportSize="{TemplateBinding ViewportHeight}" Style="{StaticResource ScrollBar-Sketch}" BorderBrush="#FF606060" Foreground="#FF606060" Background="#FFFFFFFF"/>
				<ScrollBar x:Name="HorizontalScrollBar" IsTabStop="False" Height="5" Grid.Column="0" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Value="{TemplateBinding HorizontalOffset}" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Style="{StaticResource ScrollBar-Sketch}" Background="#FFFFFFFF" BorderBrush="#FF606060" Foreground="#FF606060"/>
			</Grid>
		</Grid>
	</ControlTemplate>
	<Style x:Key="ScrollViewer-Sketch2" TargetType="ScrollViewer">
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="VerticalContentAlignment" Value="Top"/>
		<Setter Property="VerticalScrollBarVisibility" Value="Visible"/>
		<Setter Property="Padding" Value="4"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush" Value="#FF606060"/>
		<Setter Property="Template" Value="{StaticResource ScrollViewer-SketchTemplate2}"/>
		<Setter Property="Background" Value="#FFFFFFFF"/>
	</Style>
    
    <!-- Basic Sketch ScrollViewer -->
	<Style x:Key="ScrollViewer-Sketch" TargetType="ScrollViewer">
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="VerticalContentAlignment" Value="Top"/>
		<Setter Property="VerticalScrollBarVisibility" Value="Visible"/>
		<Setter Property="Padding" Value="4"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush" Value="{StaticResource BaseBorder-Sketch}"/>
		<Setter Property="Template" Value="{StaticResource ScrollViewer-SketchTemplate2}"/>
		<Setter Property="Background" Value="{StaticResource BaseBackground-Sketch}"/>
	</Style>

	<!-- Sketch ScrollViewer -->
	<Style x:Key="ScrollViewer-Sketch-List" TargetType="ScrollViewer">
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="VerticalContentAlignment" Value="Top"/>
		<Setter Property="VerticalScrollBarVisibility" Value="Visible"/>
		<Setter Property="Padding" Value="4"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush" Value="{StaticResource BaseBorder-Sketch}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ScrollViewer">
					<Grid>
						<Grid Background="{TemplateBinding Background}">
							<Grid.RowDefinitions>
								<RowDefinition Height="*"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>
							<sketch:SketchRectangleSL SegmentLength="8" SegmentOffset="0.12" SegmentVariance="0.1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Foreground="{TemplateBinding Foreground}" Grid.ColumnSpan="2" Grid.RowSpan="2"/>
							<ScrollContentPresenter x:Name="ScrollContentPresenter" Cursor="{TemplateBinding Cursor}" Margin="{TemplateBinding Padding}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
							<Rectangle Fill="{x:Null}" Grid.Column="1" Grid.Row="1"/>
							<ScrollBar x:Name="VerticalScrollBar" IsTabStop="False" Width="5" Grid.Column="1" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Value="{TemplateBinding VerticalOffset}" Orientation="Vertical" ViewportSize="{TemplateBinding ViewportHeight}" Style="{StaticResource ScrollBar-Sketch}" BorderBrush="{StaticResource BaseBorder-Sketch}" Foreground="{StaticResource BaseForeground-Sketch}" Background="{StaticResource BaseBackground-Sketch}"/>
							<ScrollBar x:Name="HorizontalScrollBar" IsTabStop="False" Height="5" Grid.Column="0" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Value="{TemplateBinding HorizontalOffset}" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Style="{StaticResource ScrollBar-Sketch}" Background="{StaticResource BaseBackground-Sketch}" BorderBrush="{StaticResource BaseBorder-Sketch}" Foreground="{StaticResource BaseForeground-Sketch}"/>
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Background" Value="{StaticResource BaseBackground-Sketch}"/>
	</Style>
	
	<!-- Sketch ListBox-->
	<Style x:Key="ListBox-Sketch" TargetType="ListBox">
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="VerticalContentAlignment" Value="Top"/>
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="BorderBrush" Value="{StaticResource BaseBorder-Sketch}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="TabNavigation" Value="Once"/>
		<Setter Property="ItemContainerStyle" Value="{StaticResource ListBoxItem-Sketch}"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListBox">
					<Grid>
						<ScrollViewer x:Name="ScrollViewer"
                                      Style="{StaticResource ScrollViewer-Sketch}"
                                      ScrollViewer.HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                      ScrollViewer.VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      BorderThickness="{TemplateBinding BorderThickness}"
                                      Padding="{TemplateBinding Padding}"
                                      Background="{TemplateBinding Background}"
                                      Foreground="{TemplateBinding Foreground}">
                            <ItemsPresenter />
						</ScrollViewer>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- Sketch Thumb -->
	<Style x:Key="Thumb-Sketch" TargetType="Thumb" d:IsControlPart="true">
		<Setter Property="Background" Value="#FF1F3B53"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="BorderBrush">
			<Setter.Value>
				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
					<GradientStop Color="#FFA3AEB9" Offset="0"/>
					<GradientStop Color="#FF8399A9" Offset="0.375"/>
					<GradientStop Color="#FF718597" Offset="0.375"/>
					<GradientStop Color="#FF617584" Offset="1"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Thumb">
					<Grid d:DesignHeight="19.5" d:DesignWidth="11.333" Background="#00000000" Cursor="Hand">
						<vsm:VisualStateManager.VisualStateGroups>
							<vsm:VisualStateGroup x:Name="CommonStates">
								<vsm:VisualStateGroup.Transitions>
									<vsm:VisualTransition GeneratedDuration="00:00:00.2000000"/>
									<vsm:VisualTransition GeneratedDuration="00:00:00" To="Pressed"/>
									<vsm:VisualTransition From="Pressed" GeneratedDuration="00:00:00" To="MouseOver"/>
								</vsm:VisualStateGroup.Transitions>
								<vsm:VisualState x:Name="Normal"/>
								<vsm:VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Over" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Pressed1" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Disabled1" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup x:Name="FocusStates">
								<vsm:VisualStateGroup.Transitions>
									<vsm:VisualTransition GeneratedDuration="00:00:00.1000000"/>
								</vsm:VisualStateGroup.Transitions>
								<vsm:VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Focus" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Unfocused"/>
							</vsm:VisualStateGroup>
						</vsm:VisualStateManager.VisualStateGroups>
						<sketch:SketchRectangleSL x:Name="Normal1" SegmentLength="4" SegmentOffset="0.12" SegmentVariance="0.1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Foreground="{TemplateBinding Foreground}"/>
						<sketch:SketchRectangleSL x:Name="Over" SegmentLength="4" SegmentOffset="0.12" SegmentVariance="0.1" BorderBrush="{StaticResource BaseBorder-Sketch}" Background="{StaticResource MouseOverBackground-Sketch}" Opacity="0"/>
						<sketch:SketchRectangleSL x:Name="Pressed1" SegmentLength="4" SegmentOffset="0.12" SegmentVariance="0.1" BorderBrush="{StaticResource BaseBorder-Sketch}" Background="{StaticResource BaseBorder-Sketch}" Opacity="0"/>
						<sketch:SketchRectangleSL x:Name="Focus" SegmentLength="4" SegmentOffset="0.12" SegmentVariance="0.1" BorderBrush="{StaticResource FocusedBorder-Sketch}" Background="{x:Null}" Opacity="0"/>
						<sketch:SketchRectangleSL x:Name="Disabled1" SegmentLength="4" SegmentOffset="0.12" SegmentVariance="0.1" BorderBrush="{StaticResource DisabledBorder-Sketch}" Background="{StaticResource BaseBackground-Sketch}" Opacity="0"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- Sketch Slider -->
    <ControlTemplate x:Key="SketchSimpleRepeatButton" TargetType="RepeatButton">
      <Rectangle Fill="Transparent" />
    </ControlTemplate>
    <ControlTemplate x:Key="SketchSimpleThumb" TargetType="Thumb">
      <Rectangle Fill="Transparent" />
    </ControlTemplate>
	<Style x:Key="Slider-Sketch" TargetType="Slider">
		<Setter Property="Background" Value="{StaticResource BaseForeground-Sketch}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="{StaticResource BaseBorder-Sketch}"/>
        <Setter Property="Foreground" Value="{StaticResource Accent-Sketch}"/>
        <Setter Property="Maximum" Value="10"/>
        <Setter Property="Minimum" Value="0"/>
        <Setter Property="Value" Value="4"/>
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Slider">
                    <Grid Background="Transparent">
                      <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="CommonStates">
                          <VisualState x:Name="Normal"/>
                          <VisualState x:Name="MouseOver"/>
                          <VisualState x:Name="Disabled">
                            <Storyboard>
                              <DoubleAnimation Duration="0" Storyboard.TargetName="HorizontalTrack" Storyboard.TargetProperty="Opacity" To="0.1" />
                              <DoubleAnimation Duration="0" Storyboard.TargetName="VerticalTrack" Storyboard.TargetProperty="Opacity" To="0.1" />
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalFill" Storyboard.TargetProperty="Fill">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DisabledBackground-Sketch}" />
                              </ObjectAnimationUsingKeyFrames>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalFill" Storyboard.TargetProperty="Fill">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DisabledBackground-Sketch}" />
                              </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                          </VisualState>
                        </VisualStateGroup>
                      </VisualStateManager.VisualStateGroups>
                      <Grid x:Name="HorizontalTemplate" Margin="{TemplateBinding Padding}">
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="Auto"/>
                          <ColumnDefinition Width="0"/>
                          <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Rectangle x:Name="HorizontalTrack" IsHitTestVisible="False" Fill="{TemplateBinding Background}" Opacity="0.2" Grid.ColumnSpan="3" Height="15" Margin="0,12"/>
                        <Rectangle x:Name="HorizontalFill" IsHitTestVisible="False" Fill="{TemplateBinding Foreground}" Grid.Column="0" Height="15" Margin="0,12"/>
                        <sketch:SketchRectangleSL BorderBrush="{TemplateBinding BorderBrush}" Foreground="{TemplateBinding Foreground}" Background="{x:Null}" Grid.ColumnSpan="3" Height="15" Margin="0,12"/>
                        <RepeatButton x:Name="HorizontalTrackLargeChangeDecreaseRepeatButton" IsTabStop="False" Template="{StaticResource SketchSimpleRepeatButton}" Grid.Column="0" />
                        <RepeatButton x:Name="HorizontalTrackLargeChangeIncreaseRepeatButton" IsTabStop="False" Template="{StaticResource SketchSimpleRepeatButton}" Grid.Column="2" />
                        <Thumb x:Name="HorizontalThumb" Width="1" Margin="-1,0,0,0" Grid.Column="1" Template="{StaticResource SketchSimpleThumb}" RenderTransformOrigin="0.5,0.5">
                          <Thumb.RenderTransform>
                            <ScaleTransform ScaleX="32" ScaleY="1"/>
                          </Thumb.RenderTransform>
                        </Thumb>
                      </Grid>
                      <Grid x:Name="VerticalTemplate" Margin="2">
                        <Grid.RowDefinitions>
                          <RowDefinition Height="*"/>
                          <RowDefinition Height="0"/>
                          <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Rectangle x:Name="VerticalTrack" IsHitTestVisible="False" Fill="{TemplateBinding Background}" Opacity="0.2" Grid.RowSpan="3" Width="12" Margin="12,0"/>
                        <Rectangle x:Name="VerticalFill" IsHitTestVisible="False" Fill="{TemplateBinding Foreground}" Grid.Row="2" Width="12" Margin="12,0"/>
                        <sketch:SketchRectangleSL BorderBrush="{TemplateBinding BorderBrush}" Foreground="{TemplateBinding Foreground}" Background="{x:Null}" Grid.RowSpan="3" IsHitTestVisible="False" Width="15" Margin="12,0"/>
                        <RepeatButton x:Name="VerticalTrackLargeChangeDecreaseRepeatButton" IsTabStop="False" Template="{StaticResource SketchSimpleRepeatButton}" Grid.Row="0"/>
                        <RepeatButton x:Name="VerticalTrackLargeChangeIncreaseRepeatButton" IsTabStop="False" Template="{StaticResource SketchSimpleRepeatButton}" Grid.Row="2"/>
                        <Thumb x:Name="VerticalThumb" Height="1" Margin="0,-1,0,0" Grid.Row="1" Template="{StaticResource SketchSimpleThumb}" RenderTransformOrigin="0.5,0.5">
                          <Thumb.RenderTransform>
                            <ScaleTransform ScaleX="1" ScaleY="32"/>
                          </Thumb.RenderTransform>
                        </Thumb>
                      </Grid>
                    </Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Basic Sketch TextBox -->
	<Style x:Key="BasicTextBox-Sketch" TargetType="TextBox">
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Background" Value="{StaticResource BaseBackground-Sketch}"/>
		<Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}"/>
		<Setter Property="Padding" Value="2"/>
		<Setter Property="BorderBrush" Value="{StaticResource BaseBorder-Sketch}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TextBox">
					<Grid x:Name="RootElement">
						<vsm:VisualStateManager.VisualStateGroups>
							<vsm:VisualStateGroup x:Name="CommonStates">
								<vsm:VisualState x:Name="Normal"/>
								<vsm:VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Over" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Disabled1" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Normal1" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.4"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="ReadOnly">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ReadOnlyVisualElement" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup x:Name="FocusStates">
								<vsm:VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Focus" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Unfocused">
									<Storyboard/>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
						</vsm:VisualStateManager.VisualStateGroups>
						<Grid x:Name="Border" Opacity="1">
							<sketch:SketchRectangleSL x:Name="Normal1" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SegmentLength="8" SegmentOffset="0.12" SegmentVariance="0.1" Foreground="{TemplateBinding Foreground}"/>
							<sketch:SketchRectangleSL x:Name="Over" BorderBrush="{StaticResource BaseBorder-Sketch}" Background="{StaticResource MouseOverBackground-Sketch}" Opacity="0" SegmentLength="8" SegmentOffset="0.12" SegmentVariance="0.1"/>
							<sketch:SketchRectangleSL x:Name="Focus" BorderBrush="{StaticResource FocusedBorder-Sketch}" Background="{StaticResource MouseOverBackground-Sketch}" Opacity="0" SegmentLength="8" SegmentOffset="0.12" SegmentVariance="0.1"/>
							<sketch:SketchRectangleSL x:Name="Disabled1" BorderBrush="{StaticResource DisabledBorder-Sketch}" Background="{StaticResource BaseBackground-Sketch}" Opacity="0" SegmentLength="8" SegmentOffset="0.12" SegmentVariance="0.1"/>
							<Grid>
								<Border x:Name="ReadOnlyVisualElement" Opacity="0" Background="#72F7F7F7"/>
								<Border x:Name="MouseOverBorder" BorderBrush="Transparent" BorderThickness="1">
									<ScrollViewer Style="{StaticResource ScrollViewer-Sketch2}" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}" BorderBrush="{x:Null}" ScrollViewer.VerticalScrollBarVisibility="Disabled" ScrollViewer.HorizontalScrollBarVisibility="Disabled" x:Name="ContentElement" BorderThickness="0" IsTabStop="False" Padding="{TemplateBinding Padding}" Margin="2"/> 
								</Border>
							</Grid>
						</Grid>
						<Border x:Name="DisabledVisualElement" IsHitTestVisible="False" Opacity="0" Background="#A5F7F7F7" BorderBrush="#A5F7F7F7" BorderThickness="{TemplateBinding BorderThickness}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}"/>
		<Setter Property="FontSize" Value="{StaticResource SizeDouble-Sketch}"/>
		<Setter Property="FontWeight" Value="{StaticResource FontWeight-Sketch}"/>
	</Style>
	
	<!-- Sketch TextBox -->
	<Style x:Key="TextBox-Sketch" TargetType="TextBox" BasedOn="{StaticResource BasicTextBox-Sketch}"/>

    <!-- Chrome Buttons -->
    <Style x:Key="Chrome-Button" TargetType="Button">
        <Setter Property="Background" Value="#00FFFFFF"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}"/>
        <Setter Property="FontSize" Value="{StaticResource PhoneFontSizeMediumLarge}"/>
        <Setter Property="Height" Value="80"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Width" Value="80"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="ButtonBackground"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="0"
                                Margin="{StaticResource PhoneMargin}">
                            <ContentControl x:Name="ContentContainer"
                                            Foreground="{TemplateBinding Foreground}"
                                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                            Padding="{TemplateBinding Padding}"
                                            Content="{TemplateBinding Content}"
                                            ContentTemplate="{TemplateBinding ContentTemplate}" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Panorama. -->
    <Style TargetType="phone:Panorama">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <primitives:PanoramaPanel x:Name="panel"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="phone:Panorama">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <primitives:PanningBackgroundLayer x:Name="BackgroundLayer" Grid.RowSpan="2" HorizontalAlignment="Left">
                            <Border x:Name="background" Background="{TemplateBinding Background}" CacheMode="BitmapCache"/>
                        </primitives:PanningBackgroundLayer>

                        <primitives:PanningTitleLayer x:Name="TitleLayer" Grid.Row="0" HorizontalAlignment="Left"  Margin="10,-76,0,9"
                                                        Content="{TemplateBinding Title}" ContentTemplate="{TemplateBinding TitleTemplate}" 
                                                        FontSize="187" FontFamily="{StaticResource FontFamily-Sketch}" CacheMode="BitmapCache"/>

                        <primitives:PanningLayer x:Name="ItemsLayer" Grid.Row="1" HorizontalAlignment="Left">
                            <ItemsPresenter x:Name="items"/>
                        </primitives:PanningLayer>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="phone:PanoramaItem">
        <Setter Property="CacheMode" Value="BitmapCache"/>
        <Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="phone:PanoramaItem">
                    <Grid Margin="12,0,0,0" Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <ContentControl x:Name="header"
                                        Margin="10,-2,0,26"
                                        Content="{TemplateBinding Header}"
                                        ContentTemplate="{TemplateBinding HeaderTemplate}"
                                        Foreground="{TemplateBinding Foreground}"
                                        FontFamily="{StaticResource FontFamily-Sketch}"
                                        FontSize="{StaticResource PhoneFontSizeExtraExtraLarge}"
                                        HorizontalAlignment="Left">
                            <ContentControl.RenderTransform>
                                <TranslateTransform x:Name="headerTransform" />
                            </ContentControl.RenderTransform>
                        </ContentControl>
                        <ContentPresenter Grid.Row="1"
                                          Content="{TemplateBinding Content}"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Pivot. -->
    <Style TargetType="primitives:PivotHeadersControl">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <Canvas />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="primitives:PivotHeaderItem">
                    <Setter Property="FontSize" Value="{StaticResource PhoneFontSizeExtraExtraLarge}"/>
                    <Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}"/>
                    <Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}"/>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="primitives:PivotHeadersControl">
                    <Grid>
                        <Canvas x:Name="Canvas">
                            <ItemsPresenter />
                        </Canvas>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	<Style TargetType="phone:Pivot">
        <Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}"/>
        <Setter Property="FontSize" Value="{StaticResource PhoneFontSizeNormal}"/>
		<Setter Property="Foreground" Value="{StaticResource PhoneForegroundBrush}"/>
    </Style>
</ResourceDictionary>